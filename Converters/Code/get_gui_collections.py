# Файл Demiurge/Converters/UI/QtDesigner/get_gui_collections.py
# предназначен для получения списка файлов,
# находящихся в той же папке, где расположен этот скрипт.
# Он может быть полезен для автоматизации процессов,
# связанных с работой с файлами, например, для загрузки интерфейсных компонентов или обработки других файлов,
# связанных с проектом.
# Назначение файла:
#
#     Получение списка файлов: Функция get_files_in_current_folder возвращает список файлов,
#     находящихся в папке, где находится скрипт, что позволяет пользователю или
#     другим частям программы легко получить доступ к этим файлам.
#     Автоматизация: Упрощает задачу нахождения файлов в текущей директории без
#     необходимости указывать полный путь, что может быть полезно для разработчиков,
#     работающих с проектами, содержащими множество файлов.
#
# Классы в get_gui_collections.py:
#
# Данный файл представляет собой функциональный скрипт и не содержит классов. Однако для
# повышения модульности и повторного использования можно предложить создание класса.
#
#     FileCollector
#         Методы:
#             __init__(self, folder_path): Конструктор, который принимает путь к папке
#             (по умолчанию - текущая директория).
#             get_files(self): Метод, возвращающий список файлов в указанной папке.
#
# Механизм работы:
#
#     Инициализация: При создании экземпляра класса FileCollector можно указать путь к папке.
#     Если путь не указан, будет использоваться путь к текущему скрипту.
#     Получение файлов: Метод get_files возвращает список файлов, находящихся в заданной папке.
#     Вывод результата: В главном блоке (__main__) создается экземпляр класса FileCollector,
#     и вызывается метод для получения и вывода списка файлов.
#
# Заключение:
#
# Этот файл выполняет простую, но полезную задачу по получению списка файлов в текущей папке.
# Создание класса FileCollector может улучшить структуру кода и обеспечить более гибкое использование функции в
# других частях проекта.
#

import os


class FileCollector:
    def __init__(self, folder_path=None):
        self.folder_path = folder_path or os.path.dirname(os.path.abspath(__file__))

    def get_files(self):
        """
        Возвращает список файлов в заданной папке.

        Returns:
            list: Список файлов в папке.
        """
        return os.listdir(self.folder_path)


def get_files_in_current_folder():
    """
    Возвращает список файлов, находящихся в той же папке, где находится скрипт.

    Returns:
        list: Список файлов в папке.
    """
    # Получаем путь к текущей директории
    current_dir = os.path.dirname(os.path.abspath(__file__))

    # Получаем список файлов в текущей директории
    files = os.listdir(current_dir)

    return files


if __name__ == "__main__":
    files = get_files_in_current_folder()
    print("Files in the current folder:", files)

    collector = FileCollector()
    files = collector.get_files()
    print("Files in the current folder:", files)
